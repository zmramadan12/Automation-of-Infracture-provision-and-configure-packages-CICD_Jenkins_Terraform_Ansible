pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID      = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY  = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_REGION             = "ap-southeast-3"
    }

    stages {
        stage('Checkout code') {
            steps {
                git branch: 'main', url: 'https://github.com/zmramadan12/Automation-of-Infracture-provision-and-configure-packages-CICD_Jenkins_Terraform_Ansible.git'
            }
        }

        stage('Terraform Init') {
            steps {
                sh 'terraform init'
            }
        }

        stage('Terraform Plan') {
            steps {
                sh 'terraform plan -out=tfplan'
            }
        }

        stage('Terraform Apply') {
            steps {
                sh 'terraform apply -auto-approve tfplan'
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                withCredentials([file(credentialsId: 'EC2_PEM_FILE', variable: 'SSH_KEY_FILE')]) {
                    sh """
                    chmod 400 "${SSH_KEY_FILE}"
                    chmod 400 "${WORKSPACE}/inventory.ini"
                    ansible-playbook -i "${WORKSPACE}/inventory.ini" "${WORKSPACE}/playbook.yaml" \\
                      --private-key "${SSH_KEY_FILE}" \\
                      --ssh-extra-args="-o StrictHostKeyChecking=no"
                    """
                }
            }
        }
    }

    post {
        failure {
            echo "Pipeline failed. Check the console logs for details."
        }
    }
}
